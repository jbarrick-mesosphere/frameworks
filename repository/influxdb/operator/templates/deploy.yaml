apiVersion: apps/v1
kind: Deployment
metadata:
  name: influxdb
  labels:
    app: influxdb
    instance: {{ .Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: influxdb
      instance: {{ .Name }}
  template:
    metadata:
      labels:
        app: influxdb
        instance: {{ .Name }}
    spec:
      containers:
      - name: influxdb
        image: quay.io/influxdb/influxdb:1.6
        env:
        - name: INFLUXDB_HTTP_AUTH_ENABLED
          value: "true"
        resources:
          requests:
            cpu: 0m
        ports:
        - name: influxdb-port
          containerPort: 8086
        volumeMounts:
        - mountPath: /var/lib/influxdb/
          name: database-volume
      - name: create-dbs
        image: quay.io/influxdb/influxdb:1.6
        imagePullPolicy: "IfNotPresent"
        command:
        - bash
        - -c
        - |
          set -e

          until influx -execute "CREATE USER $INFLUX_USERNAME WITH PASSWORD '$INFLUX_PASSWORD' WITH ALL PRIVILEGES;"; do
            echo waiting for influxdb;
            sleep 1;
          done

          if [[ "$INFLUX_DATABASE" != "" ]]; then
            influx -execute "create database \"$INFLUX_DATABASE\""
          fi

          tail -f /dev/null
        env:
        - name: INFLUX_DATABASE
          valueFrom:
            secretKeyRef:
              key: database
              name: {{ .Params.INFLUX_SECRET }}
        - name: INFLUX_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: {{ .Params.INFLUX_SECRET }}
        - name: INFLUX_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: {{ .Params.INFLUX_SECRET }}
      volumes:
      - name: database-volume
        persistentVolumeClaim:
          claimName: influxdb
---
apiVersion: v1
kind: Service
metadata:
  name: influxdb
  labels:
    app: influxdb
    instance: {{ .Name }}
spec:
  ports:
  - name: influxdb
    port: 8086
    targetPort: influxdb-port
  selector:
    app: influxdb
    instance: {{ .Name }}
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: influxdb
  labels:
    app: influxdb
    instance: {{ .Name }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "{{ .Params.DISK_SIZE }}"
